/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.beanslab.cashretriver.creditos.creditosexplorer;

import co.com.beanslab.cashretriver.modelo.Cobros;
import co.com.beanslab.cashretriver.modelo.Roles;
import co.com.beanslab.cashretriver.modelo.controllers.CobrosJpaController;
import co.com.beanslab.cashretriver.modelo.controllers.RolesJpaController;

import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.Lookups;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//co.com.beanslab.cashretriver.creditos.creditosexplorer//CreditosExplorer//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "CreditosExplorerTopComponent",
        iconBase = "co/com/beanslab/cashretriver/creditos/creditosexplorer/creditoexplorer-16.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "co.com.beanslab.cashretriver.creditos.creditosexplorer.CreditosExplorerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CreditosExplorerAction",
        preferredID = "CreditosExplorerTopComponent")
@Messages({
    "CTL_CreditosExplorerAction=Creditos Explorer",
    "CTL_CreditosExplorerTopComponent=Creditos Explorer Ventana",
    "HINT_CreditosExplorerTopComponent=Esta es la ventana del explorador de credito."
})
public final class CreditosExplorerTopComponent extends TopComponent implements ExplorerManager.Provider{
    private ExplorerManager em=new ExplorerManager();

    public CreditosExplorerTopComponent() {
        initComponents();
        setName(Bundle.CTL_CreditosExplorerTopComponent());
        setToolTipText(Bundle.HINT_CreditosExplorerTopComponent());
        
        EntityManagerFactory emf=Persistence.createEntityManagerFactory("ModeloPU");
//        RolesJpaController rjc=new RolesJpaController(emf);
//        List<Roles> findRolesEntities = rjc.findRolesEntities();
        CobrosJpaController rjc=new CobrosJpaController(emf);
        List<Cobros> findCobrosEntities = rjc.findCobrosEntities();
        
//        em.setRootContext(new AbstractNode(Children.create(new CreditoChildFactory(findRolesEntities), true)));
        em.setRootContext(new CreditoAbstractRoot(Children.create(new CreditoChildFactory(findCobrosEntities), true)));
        
        associateLookup(ExplorerUtils.createLookup(em, getActionMap()));
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        beanTreeView1 = new org.openide.explorer.view.BeanTreeView();

        setLayout(new java.awt.BorderLayout());
        add(beanTreeView1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.BeanTreeView beanTreeView1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }
}
